import requests
from bs4 import BeautifulSoup
from telegram import ReplyKeyboardRemove, ReplyKeyboardMarkup, ParseMode, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ConversationHandler
from glob import glob
from random import choice
from utility import get_keyboard
from emoji import emojize
from utility import SMILE
from mongodb import mdb, search_or_save_user, save_user_anketa

def sms(bot, update):
    user = search_or_save_user(mdb, bot.effective_user, bot.message)
    print(user)
    smile = emojize(choice(SMILE), use_aliases=True)
    bot.message.reply_text('–ü—Ä–∏–≤–µ—Ç, {} \n–ü–æ–≥–æ–≤–æ—Ä–∏ —Å–æ –º–Ω–æ–π {}'.format(bot.message.chat.first_name, smile), reply_markup=get_keyboard())


def parrot(bot, update):
    print('–ö—Ç–æ-—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–º–∞–Ω–¥—É /start, —á—Ç–æ –¥–µ–ª–∞—Ç—å?')
    bot.message.reply_text(bot.message.text)

def get_contact(bot, update):
    print(bot.message.contact)
    bot.message.reply_text('{}, –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'.format(bot.message.chat.first_name))

def get_location(bot, update):
    print(bot.message.location)
    bot.message.reply_text('{}, –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ'.format(bot.message.chat.first_name))

def get_anecdote(bot, update):
    receive = requests.get('http://anekdotme.ru/random')
    page = BeautifulSoup(receive.text, "html.parser")
    find = page.select('.anekdot_text')
    for text in find:
        page = (text.getText().strip())
    bot.message.reply_text(page)

def anketa_start(bot, update):
    user = search_or_save_user(mdb, bot.effective_user, bot.message)
    if 'anketa' in user:
        text = """–í–∞—à –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
        <b>–ò–º—è:</b> {name}
        <b>–í–æ–∑—Ä–∞—Å—Ç:</b> {age}
        <b>–û—Ü–µ–Ω–∫–∞:</b> {evaluation}
        <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {comment}
–î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –æ–±–Ω–æ–≤–ª–µ–Ω—ã!
        –ö–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç?""".format(**user['anketa'])
        bot.message.reply_text(
            text, parse_mode=ParseMode.HTML, reply_markup=ReplyKeyboardRemove())
        return "user_name"
    else:
        bot.message.reply_text('–ö–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç?', reply_markup=ReplyKeyboardRemove())
        return "user_name"

def anketa_get_name(bot, update):
    update.user_data['name'] = bot.message.text
    bot.message.reply_text("–°–∫–æ–ª—å–∫–æ –í–∞–º –ª–µ—Ç?")
    return "user_age"

def anketa_get_age(bot, update):
    update.user_data['age'] = bot.message.text
    reply_keyboard = [["1", "2", "3", "4", "5"]]
    bot.message.reply_text("–û—Ü–µ–Ω–∏—Ç–µ —Å—Ç–∞—Ç—å—é –æ—Ç 1 –¥–æ 5",
                           reply_markup=ReplyKeyboardMarkup(reply_keyboard, resize_keyboard=True, one_time_keyboard=True))
    return "evaluation"

def anketa_get_evaluation(bot, update):
    update.user_data['evaluation'] = bot.message.text
    reply_keyboard = [["–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"]]
    bot.message.reply_text("–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥.",
                           reply_markup=ReplyKeyboardMarkup(reply_keyboard,resize_keyboard=True, one_time_keyboard=True))
    return "comment"

def anketa_comment(bot, update):
    user = search_or_save_user(mdb, bot.effective_user, bot.message)
    anketa = save_user_anketa(mdb, user, update.user_data)
    print(anketa)

    update.user_data['comment'] = bot.message.text
    text = """–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø—Ä–æ—Å–∞:
    <b>–ò–º—è:</b> {name}
    <b>–í–æ–∑—Ä–∞—Å—Ç:</b> {age}
    <b>–û—Ü–µ–Ω–∫–∞:</b> {evaluation}
    <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {comment}
    """.format(**update.user_data)
    bot.message.reply_text(text, parse_mode=ParseMode.HTML)
    bot.message.reply_text("–°–ø–∞—Å–∏–±–æ –í–∞–º –∑–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π!", reply_markup=get_keyboard())
    return ConversationHandler.END


def anketa_exit_comment(bot, update):
    update.user_data['comment'] = None
    user = search_or_save_user(mdb, bot.effective_user, bot.message)
    save_user_anketa(mdb, user, update.user_data)

    text = """–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø—Ä–æ—Å–∞:
    <b>–ò–º—è:</b> {name}
    <b>–í–æ–∑—Ä–∞—Å—Ç:</b> {age}
    <b>–û—Ü–µ–Ω–∫–∞:</b> {evaluation}
    """.format(**update.user_data)
    bot.message.reply_text(text, parse_mode=ParseMode.HTML)
    bot.message.reply_text("–°–ø–∞—Å–∏–±–æ!", reply_markup=get_keyboard())
    return ConversationHandler.END

def dontknow(bot, update):
    bot.message.reply_text("–Ø –í–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é, –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ü–µ–Ω–∫—É –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ!")

def send_meme(bot, update):
    lists = glob('images/*')
    picture = choice(lists)
    inl_keyboard = InlineKeyboardMarkup([[
        InlineKeyboardButton('üëç', callback_data="1"),
        InlineKeyboardButton('üëé', callback_data="-1")
    ]])
    update.bot.send_photo(
        chat_id=bot.message.chat.id,
        photo=open(picture, 'rb'),
        reply_markup=inl_keyboard)

def inline_button_pressed(bot, update):
    print(bot.callback_query)
    query = bot.callback_query
    update.bot.edit_message_caption(
        caption='–°–ø–∞—Å–∏–±–æ –í–∞–º –∑–∞ –≤—ã–±–æ—Ä!',
        chat_id=query.message.chat.id,
        message_id=query.message.message_id)
